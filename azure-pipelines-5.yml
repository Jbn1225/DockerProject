trigger:
  branches:
    include:
      - main  # Triggers the pipeline on changes to the main branch

pool:
  name: Default  # The name of the agent pool with the self-hosted agent
  # Note: No vmImage is needed for a self-hosted agent

steps:
  # Step 1: Check out the code
  - checkout: self

  # Step 2: Log in to Docker registry (e.g., Azure Container Registry or Docker Hub)
  - task: Docker@2
    inputs:
      containerRegistry: 'myDockerRegistryServiceConnection'  # Replace with the service connection name for your registry
      repository: 'sample-app'               # Docker repository name (e.g., Azure Container Registry repo)
      command: 'login'                       # Log in to the container registry

  # Step 3: Build and Push Docker Image
  - task: Docker@2
    inputs:
      containerRegistry: 'myDockerRegistryServiceConnection'  # Service connection for your Docker registry
      repository: 'sample-app'               # Name of the image repository
      command: 'buildAndPush'                # Command to build and push the Docker image
      Dockerfile: '**/Dockerfile'            # Path to the Dockerfile in your repo
      tags: 'latest'                         # Tag for the Docker image (e.g., latest)

  # Step 4: Deploy the Docker image using Azure CLI
  - task: AzureCLI@2
    inputs:
      azureSubscription: 'myAzureSubscription'  # Service connection for your Azure subscription
      scriptType: 'bash'
      scriptLocation: 'inlineScript'
      inlineScript: |
        # Deploy Docker image to Azure App Service (or other Azure services as needed)
        az webapp create --resource-group myResourceGroup --plan myAppServicePlan --name myAppService \
          --deployment-container-image-name myacrregistry.azurecr.io/sample-app:latest
